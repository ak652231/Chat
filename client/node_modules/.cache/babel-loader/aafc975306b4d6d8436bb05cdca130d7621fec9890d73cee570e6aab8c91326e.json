{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import io from'socket.io-client';import{jwtDecode}from'jwt-decode';import{FiSend,FiUser,FiMessageSquare,FiCircle,FiSearch,FiX}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const getCurrentUserId=()=>{try{const token=sessionStorage.getItem('token');if(!token)return null;const decodedToken=jwtDecode(token);return decodedToken.user.id;}catch(error){console.error('Error decoding token:',error);return null;}};const ChatInterface=()=>{const[conversations,setConversations]=useState([]);const[messages,setMessages]=useState([]);const[selectedConversation,setSelectedConversation]=useState(null);const[newMessage,setNewMessage]=useState('');const[socket,setSocket]=useState(null);const messagesEndRef=useRef(null);const[isSearchOpen,setIsSearchOpen]=useState(false);const[searchQuery,setSearchQuery]=useState('');const[searchResults,setSearchResults]=useState([]);const[users,setUsers]=useState([]);const[error,setError]=useState(null);// In useEffect or when component mounts\nuseEffect(()=>{// Connect to socket\nconst newSocket=io('http://localhost:5000',{auth:{token:sessionStorage.getItem('token')}});newSocket.on('receive_message',message=>{if(selectedConversation&&message.conversationId===selectedConversation.conversationId){setMessages(prevMessages=>[...prevMessages,message]);}});setSocket(newSocket);return()=>newSocket.close();},[selectedConversation]);useEffect(()=>{const fetchConversations=async()=>{const token=sessionStorage.getItem('token');console.log('Stored token:',sessionStorage.getItem('token'));try{const response=await fetch('http://localhost:5000/api/chat/conversations',{method:'GET',headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();const conversationsArray=Array.isArray(data)?data:[data];console.log(\"convo:\",conversationsArray);setConversations(conversationsArray);}catch(error){console.error('Failed to fetch conversations:',error);setConversations([]);}};const fetchUsers=async()=>{const token=sessionStorage.getItem('token');try{const response=await fetch(`http://localhost:5000/api/chat/search-users?query=${encodeURIComponent(searchQuery)}`,{method:'GET',headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();if(Array.isArray(data)){setUsers(data);}else{console.error('Unexpected response format:',data);setUsers([]);}}catch(error){console.error('Failed to fetch users:',error);setUsers([]);}};fetchConversations();fetchUsers();},[]);useEffect(()=>{const fetchMessages=async()=>{if(!selectedConversation)return;if(!selectedConversation.conversationId){const token=sessionStorage.getItem('token');const currentUserId=getCurrentUserId();try{const response=await fetch(`http://localhost:5000/api/chat/search-conversation`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify({senderId:currentUserId,receiverId:selectedConversation.user._id})});const data=await response.json();if(data.conversationId){setSelectedConversation(prev=>({...prev,conversationId:data.conversationId}));}}catch(error){console.error('Failed to search for existing conversation:',error);}return;}const token=sessionStorage.getItem('token');try{const response=await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`,{method:'GET',headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();const messagesArray=Array.isArray(data)?data:[data];console.log('Fetched messages:',data);if(Array.isArray(data)){setMessages(messagesArray);}else{console.error('Data is not an array:',data);}}catch(error){console.error('Failed to fetch messages:',error);}};fetchMessages();},[selectedConversation]);useEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);useEffect(()=>{const filtered=users.filter(user=>user.username.toLowerCase().includes(searchQuery.toLowerCase()));setSearchResults(filtered);},[searchQuery,users]);const handleSendMessage=e=>{var _searchResults$find;e.preventDefault();if(!newMessage||!socket)return;const receiverId=selectedConversation?selectedConversation.user._id:(_searchResults$find=searchResults.find(user=>user.username.toLowerCase().includes(searchQuery.toLowerCase())))===null||_searchResults$find===void 0?void 0:_searchResults$find._id;if(!receiverId){console.error('No receiver selected');return;}socket.emit('send_message',{receiverId,content:newMessage});const fetchMessages=async()=>{if(!selectedConversation)return;if(!selectedConversation.conversationId){const token=sessionStorage.getItem('token');const currentUserId=getCurrentUserId();try{const response=await fetch(`http://localhost:5000/api/chat/search-conversation`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify({senderId:currentUserId,receiverId:selectedConversation.user._id})});const data=await response.json();if(data.conversationId){setSelectedConversation(prev=>({...prev,conversationId:data.conversationId}));}}catch(error){console.error('Failed to search for existing conversation:',error);}return;}const token=sessionStorage.getItem('token');try{const response=await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`,{method:'GET',headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();const messagesArray=Array.isArray(data)?data:[data];console.log('Fetched messages:',data);if(Array.isArray(data)){setMessages(messagesArray);}else{console.error('Data is not an array:',data);}}catch(error){console.error('Failed to fetch messages:',error);}};const fetchConversations=async()=>{const token=sessionStorage.getItem('token');console.log('Stored token:',sessionStorage.getItem('token'));try{const response=await fetch('http://localhost:5000/api/chat/conversations',{method:'GET',headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();const conversationsArray=Array.isArray(data)?data:[data];console.log(\"convo:\",conversationsArray);setConversations(conversationsArray);}catch(error){console.error('Failed to fetch conversations:',error);setConversations([]);}};fetchConversations();fetchMessages();setNewMessage('');};const handleUserSelect=user=>{setSelectedConversation({user:user,conversationId:null});setIsSearchOpen(false);setSearchQuery('');};if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-screen bg-[#0F172A] text-[#E5E7EB]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"mt-4 bg-[#2563EB] text-[#E5E7EB] rounded-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\",children:\"Retry\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen bg-[#0F172A] text-[#E5E7EB]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-0 left-0 right-0 bg-[#1E3A8A] p-2 flex items-center justify-between z-10\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-[#FACC15]\",children:\"FuturChat\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[selectedConversation&&!selectedConversation.conversationId&&/*#__PURE__*/_jsx(\"button\",{className:\"mr-2 bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\",children:/*#__PURE__*/_jsx(FiX,{})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsSearchOpen(!isSearchOpen),className:\"bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\",children:/*#__PURE__*/_jsx(FiSearch,{})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-full pt-12 transition-all duration-300 ease-in-out\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`w-64 bg-[#1E3A8A] p-4 overflow-y-auto h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen?'w-48':'w-64'}`,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-[#FACC15]\",children:\"Chats\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:conversations.map(conv=>{var _conv$user,_conv$user2,_conv$user3;return/*#__PURE__*/_jsxs(\"li\",{className:`flex items-center p-2 rounded-lg cursor-pointer transition-colors duration-200 ${(selectedConversation===null||selectedConversation===void 0?void 0:selectedConversation.conversationId)===conv.conversationId?'bg-[#2563EB]':'hover:bg-[#312E81]'}`,onClick:()=>setSelectedConversation(conv),children:[/*#__PURE__*/_jsx(FiUser,{className:\"mr-2 text-[#FACC15]\"}),/*#__PURE__*/_jsx(\"span\",{className:\"truncate\",children:((_conv$user=conv.user)===null||_conv$user===void 0?void 0:_conv$user.name)||((_conv$user2=conv.user)===null||_conv$user2===void 0?void 0:_conv$user2.username)||'Unknown User'}),/*#__PURE__*/_jsx(FiCircle,{className:`ml-auto w-2 h-2 ${(_conv$user3=conv.user)!==null&&_conv$user3!==void 0&&_conv$user3.isOnline?'text-green-500':'text-gray-500'}`})]},conv.conversationId);})})]}),/*#__PURE__*/_jsx(\"div\",{className:`flex-1 flex flex-col h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen?'mr-64':''}`,children:selectedConversation?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#1E3A8A] p-4 flex items-center\",children:[/*#__PURE__*/_jsx(FiUser,{className:\"mr-2 text-[#FACC15]\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:selectedConversation.user.name}),/*#__PURE__*/_jsx(FiCircle,{className:`ml-2 w-2 h-2 ${selectedConversation.user.isOnline?'text-green-500':'text-gray-500'}`})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-4\",children:[messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.senderId===getCurrentUserId()?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`max-w-xs p-3 rounded-lg ${message.senderId===getCurrentUserId()?'bg-[#2563EB]':'bg-[#312E81]'}`,children:[/*#__PURE__*/_jsx(\"p\",{children:message.content}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-[#A78BFA] mt-1\",children:new Date(message.timestamp).toLocaleTimeString()})]})},message._id)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSendMessage,className:\"bg-[#1E3A8A] p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type a message...\",className:\"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-[#2563EB] text-[#E5E7EB] rounded-r-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\",children:/*#__PURE__*/_jsx(FiSend,{})})]})})]}):/*#__PURE__*/// No conversation selected\n_jsx(\"div\",{className:\"flex-1 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(FiMessageSquare,{className:\"mx-auto text-6xl text-[#A78BFA] mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl\",children:\"Select a conversation to start chatting\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:`fixed right-0 top-12 bottom-0 bg-[#1E3A8A] w-64 transition-all duration-300 ease-in-out transform ${isSearchOpen?'translate-x-0':'translate-x-full'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center mb-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),placeholder:\"Search users...\",className:\"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-auto h-[calc(100vh-8rem)]\",children:searchResults.map(user=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center p-2 rounded-lg cursor-pointer hover:bg-[#312E81] transition-colors duration-200\",onClick:()=>handleUserSelect(user),children:[/*#__PURE__*/_jsx(FiUser,{className:\"mr-2 text-[#FACC15]\"}),/*#__PURE__*/_jsx(\"span\",{children:user.name})]},user._id))})]})})]})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jwtDecode","FiSend","FiUser","FiMessageSquare","FiCircle","FiSearch","FiX","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getCurrentUserId","token","sessionStorage","getItem","decodedToken","user","id","error","console","ChatInterface","conversations","setConversations","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","socket","setSocket","messagesEndRef","isSearchOpen","setIsSearchOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","users","setUsers","setError","newSocket","auth","on","message","conversationId","prevMessages","close","fetchConversations","log","response","fetch","method","headers","data","json","conversationsArray","Array","isArray","fetchUsers","encodeURIComponent","fetchMessages","currentUserId","body","JSON","stringify","senderId","receiverId","_id","prev","messagesArray","_messagesEndRef$curre","current","scrollIntoView","behavior","filtered","filter","username","toLowerCase","includes","handleSendMessage","e","_searchResults$find","preventDefault","find","emit","content","handleUserSelect","className","children","onClick","window","location","reload","map","conv","_conv$user","_conv$user2","_conv$user3","name","isOnline","Date","timestamp","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder"],"sources":["C:/Users/Akshay Kadam/Desktop/WebDev/chat/client/src/components/chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { FiSend, FiUser, FiMessageSquare, FiCircle, FiSearch, FiX } from 'react-icons/fi';\r\n\r\nconst getCurrentUserId = () => {\r\n  try {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) return null;\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken.user.id;\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst ChatInterface = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // In useEffect or when component mounts\r\n  useEffect(() => {\r\n    // Connect to socket\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: {\r\n        token: sessionStorage.getItem('token')\r\n      }\r\n    });\r\n\r\n    newSocket.on('receive_message', (message) => {\r\n      if (selectedConversation &&\r\n        message.conversationId === selectedConversation.conversationId) {\r\n        setMessages(prevMessages => [...prevMessages, message]);\r\n      }\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close();\r\n  }, [selectedConversation]);\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      console.log('Stored token:', sessionStorage.getItem('token'));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        const conversationsArray = Array.isArray(data) ? data : [data];\r\n        console.log(\"convo:\", conversationsArray);\r\n        setConversations(conversationsArray);\r\n      } catch (error) {\r\n        console.error('Failed to fetch conversations:', error);\r\n        setConversations([]);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/search-users?query=${encodeURIComponent(searchQuery)}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data)) {\r\n          setUsers(data);\r\n        } else {\r\n          console.error('Unexpected response format:', data);\r\n          setUsers([]); \r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch users:', error);\r\n        setUsers([]); \r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      if (!selectedConversation.conversationId) {\r\n        const token = sessionStorage.getItem('token');\r\n        const currentUserId = getCurrentUserId();\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              senderId: currentUserId,\r\n              receiverId: selectedConversation.user._id\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.conversationId) {\r\n            setSelectedConversation(prev => ({\r\n              ...prev,\r\n              conversationId: data.conversationId\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to search for existing conversation:', error);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        const messagesArray = Array.isArray(data) ? data : [data];\r\n        console.log('Fetched messages:', data);\r\n\r\n        if (Array.isArray(data)) {\r\n          setMessages(messagesArray);\r\n        } else {\r\n          console.error('Data is not an array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [selectedConversation]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    const filtered = users.filter(user =>\r\n      user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setSearchResults(filtered);\r\n  }, [searchQuery, users]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage || !socket) return;\r\n\r\n    const receiverId = selectedConversation ?\r\n      selectedConversation.user._id :\r\n      searchResults.find(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()))?._id;\r\n\r\n    if (!receiverId) {\r\n      console.error('No receiver selected');\r\n      return;\r\n    }\r\n\r\n    socket.emit('send_message', {\r\n      receiverId,\r\n      content: newMessage\r\n    });\r\n    const fetchMessages = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      if (!selectedConversation.conversationId) {\r\n        const token = sessionStorage.getItem('token');\r\n        const currentUserId = getCurrentUserId();\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              senderId: currentUserId,\r\n              receiverId: selectedConversation.user._id\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.conversationId) {\r\n            setSelectedConversation(prev => ({\r\n              ...prev,\r\n              conversationId: data.conversationId\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to search for existing conversation:', error);\r\n        }\r\n        \r\n        return;\r\n      }\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        const messagesArray = Array.isArray(data) ? data : [data];\r\n        console.log('Fetched messages:', data);\r\n\r\n        if (Array.isArray(data)) {\r\n          setMessages(messagesArray);\r\n        } else {\r\n          console.error('Data is not an array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n    const fetchConversations = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      console.log('Stored token:', sessionStorage.getItem('token'));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        const conversationsArray = Array.isArray(data) ? data : [data];\r\n        console.log(\"convo:\", conversationsArray);\r\n        setConversations(conversationsArray);\r\n      } catch (error) {\r\n        console.error('Failed to fetch conversations:', error);\r\n        setConversations([]); \r\n      }\r\n    };\r\n    fetchConversations();\r\n    fetchMessages();\r\n    setNewMessage('');\r\n\r\n  };\r\n  const handleUserSelect = (user) => {\r\n    setSelectedConversation({\r\n      user: user,\r\n      conversationId: null  \r\n    });\r\n    setIsSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-[#0F172A] text-[#E5E7EB]\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">Error</h1>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"mt-4 bg-[#2563EB] text-[#E5E7EB] rounded-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-[#0F172A] text-[#E5E7EB]\">\r\n      {/* Top section */}\r\n      <div className=\"absolute top-0 left-0 right-0 bg-[#1E3A8A] p-2 flex items-center justify-between z-10\">\r\n        <h1 className=\"text-xl font-bold text-[#FACC15]\">FuturChat</h1>\r\n        <div className=\"flex items-center\">\r\n          {selectedConversation && !selectedConversation.conversationId && (\r\n            <button\r\n              className=\"mr-2 bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n            >\r\n              <FiX />\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={() => setIsSearchOpen(!isSearchOpen)}\r\n            className=\"bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n          >\r\n            <FiSearch />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex w-full pt-12 transition-all duration-300 ease-in-out\">\r\n        {/* Conversations Sidebar */}\r\n        <div className={`w-64 bg-[#1E3A8A] p-4 overflow-y-auto h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'w-48' : 'w-64'}`}>\r\n          <h2 className=\"text-xl font-bold mb-4 text-[#FACC15]\">Chats</h2>\r\n          <ul className=\"space-y-2\">\r\n            {conversations.map((conv) => (\r\n              <li\r\n                key={conv.conversationId}\r\n                className={`flex items-center p-2 rounded-lg cursor-pointer transition-colors duration-200 ${selectedConversation?.conversationId === conv.conversationId ? 'bg-[#2563EB]' : 'hover:bg-[#312E81]'\r\n                  }`}\r\n                onClick={() => setSelectedConversation(conv)}\r\n              >\r\n                <FiUser className=\"mr-2 text-[#FACC15]\" />\r\n                <span className=\"truncate\">\r\n                  {conv.user?.name || conv.user?.username || 'Unknown User'}\r\n                </span>\r\n                <FiCircle\r\n                  className={`ml-auto w-2 h-2 ${conv.user?.isOnline ? 'text-green-500' : 'text-gray-500'\r\n                    }`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Chat Area */}\r\n        <div className={`flex-1 flex flex-col h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'mr-64' : ''}`}>\r\n          {selectedConversation ? (\r\n            <>\r\n              {/* Chat Header */}\r\n              <div className=\"bg-[#1E3A8A] p-4 flex items-center\">\r\n                <FiUser className=\"mr-2 text-[#FACC15]\" />\r\n                <span className=\"font-bold\">{selectedConversation.user.name}</span>\r\n                <FiCircle\r\n                  className={`ml-2 w-2 h-2 ${selectedConversation.user.isOnline ? 'text-green-500' : 'text-gray-500'\r\n                    }`}\r\n                />\r\n              </div>\r\n\r\n              {/* Chat Messages */}\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {messages.map((message) => (\r\n                  <div\r\n                    key={message._id}\r\n                    className={`flex ${message.senderId === getCurrentUserId() ? 'justify-end' : 'justify-start'}`}\r\n                  >\r\n                    <div\r\n                      className={`max-w-xs p-3 rounded-lg ${message.senderId === getCurrentUserId() ? 'bg-[#2563EB]' : 'bg-[#312E81]'\r\n                        }`}\r\n                    >\r\n                      <p>{message.content}</p>\r\n                      <p className=\"text-xs text-[#A78BFA] mt-1\">\r\n                        {new Date(message.timestamp).toLocaleTimeString()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              {/* Message Input */}\r\n              <form onSubmit={handleSendMessage} className=\"bg-[#1E3A8A] p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                    className=\"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-[#2563EB] text-[#E5E7EB] rounded-r-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n                  >\r\n                    <FiSend />\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            // No conversation selected\r\n            <div className=\"flex-1 flex items-center justify-center\">\r\n              <div className=\"text-center\">\r\n                <FiMessageSquare className=\"mx-auto text-6xl text-[#A78BFA] mb-4\" />\r\n                <p className=\"text-xl\">Select a conversation to start chatting</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Search Capsule */}\r\n        <div\r\n          className={`fixed right-0 top-12 bottom-0 bg-[#1E3A8A] w-64 transition-all duration-300 ease-in-out transform ${isSearchOpen ? 'translate-x-0' : 'translate-x-full'\r\n            }`}\r\n        >\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search users...\"\r\n                className=\"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"\r\n              />\r\n            </div>\r\n            <div className=\"overflow-y-auto h-[calc(100vh-8rem)]\">\r\n              {searchResults.map((user) => (\r\n                <div\r\n                  key={user._id}\r\n                  className=\"flex items-center p-2 rounded-lg cursor-pointer hover:bg-[#312E81] transition-colors duration-200\"\r\n                  onClick={() => handleUserSelect(user)}\r\n                >\r\n                  <FiUser className=\"mr-2 text-[#FACC15]\" />\r\n                  <span>{user.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}