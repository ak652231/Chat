{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshay Kadam\\\\Desktop\\\\WebDev\\\\chat\\\\client\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport { FiSend, FiUser, FiMessageSquare, FiSearch, FiX, FiCheck, FiCheckCircle } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getCurrentUserId = () => {\n  try {\n    const token = sessionStorage.getItem('token');\n    if (!token) return null;\n    const decodedToken = jwtDecode(token);\n    return decodedToken.user.id;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return null;\n  }\n};\nconst ChatInterface = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n\n  // In useEffect or when component mounts\n  useEffect(() => {\n    // Connect to socket\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token: sessionStorage.getItem('token')\n      }\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [selectedConversation]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleReceiveMessage = message => {\n      // Update conversations with new unread count, but only if the conversation is not currently selected\n      setConversations(prevConversations => prevConversations.map(conv => {\n        // Check if the conversation is not the currently selected one\n        const shouldUpdateUnreadCount = conv.user._id === message.senderId && !(selectedConversation && selectedConversation.conversationId === message.conversationId);\n        return shouldUpdateUnreadCount ? {\n          ...conv,\n          unreadCount: message.unreadCount\n        } : conv;\n      }));\n\n      // Update messages if the conversation is currently open\n      if (selectedConversation && message.conversationId === selectedConversation.conversationId) {\n        setMessages(prevMessages => [...prevMessages, message]);\n      }\n    };\n    const handleMessagesRead = ({\n      conversationId,\n      receiverId\n    }) => {\n      // Update messages to reflect read status\n      setMessages(prevMessages => prevMessages.map(msg => msg.conversationId === conversationId && msg.senderId === getCurrentUserId() ? {\n        ...msg,\n        read: true\n      } : msg));\n    };\n    socket.on('receive_message', handleReceiveMessage);\n    socket.on('messages_read', handleMessagesRead);\n    return () => {\n      socket.off('receive_message', handleReceiveMessage);\n      socket.off('messages_read', handleMessagesRead);\n    };\n  }, [socket, selectedConversation]);\n  useEffect(() => {\n    // Mark messages as read when a conversation is selected\n    if (selectedConversation && socket) {\n      const currentUserId = getCurrentUserId();\n      const hasUnreadMessages = messages.some(msg => msg.receiverId === currentUserId && !msg.read);\n      if (hasUnreadMessages) {\n        var _messages$find;\n        socket.emit('mark_messages_read', {\n          conversationId: selectedConversation.conversationId,\n          senderId: (_messages$find = messages.find(msg => msg.receiverId === currentUserId && !msg.read)) === null || _messages$find === void 0 ? void 0 : _messages$find.senderId\n        });\n      }\n    }\n  }, [selectedConversation, messages, socket]);\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const token = sessionStorage.getItem('token');\n      console.log('Stored token:', sessionStorage.getItem('token'));\n      try {\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const conversationsArray = Array.isArray(data) ? data : [data];\n        console.log(\"convo:\", conversationsArray);\n        setConversations(conversationsArray);\n      } catch (error) {\n        console.error('Failed to fetch conversations:', error);\n        setConversations([]);\n      }\n    };\n    const fetchUsers = async () => {\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/search-users?query=${encodeURIComponent(searchQuery)}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setUsers(data);\n        } else {\n          console.error('Unexpected response format:', data);\n          setUsers([]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch users:', error);\n        setUsers([]);\n      }\n    };\n    fetchConversations();\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!selectedConversation) return;\n      if (!selectedConversation.conversationId) {\n        const token = sessionStorage.getItem('token');\n        const currentUserId = getCurrentUserId();\n        try {\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              senderId: currentUserId,\n              receiverId: selectedConversation.user._id\n            })\n          });\n          const data = await response.json();\n          if (data.conversationId) {\n            setSelectedConversation(prev => ({\n              ...prev,\n              conversationId: data.conversationId\n            }));\n          }\n        } catch (error) {\n          console.error('Failed to search for existing conversation:', error);\n        }\n        return;\n      }\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const messagesArray = Array.isArray(data) ? data : [data];\n        console.log('Fetched messages:', data);\n        if (Array.isArray(data)) {\n          setMessages(messagesArray);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [selectedConversation]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!selectedConversation) return;\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}/read`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n\n        // Update conversations to remove unread count for this conversation\n        setConversations(prevConversations => prevConversations.map(conv => conv.conversationId === selectedConversation.conversationId ? {\n          ...conv,\n          unreadCount: 0\n        } : conv));\n      } catch (error) {\n        console.error('Failed to mark messages as read:', error);\n      }\n    };\n    markMessagesAsRead();\n  }, [selectedConversation]);\n  useEffect(() => {\n    const filtered = users.filter(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()));\n    setSearchResults(filtered);\n  }, [searchQuery, users]);\n  const handleSendMessage = e => {\n    var _searchResults$find;\n    e.preventDefault();\n    if (!newMessage || !socket) return;\n    const receiverId = selectedConversation ? selectedConversation.user._id : (_searchResults$find = searchResults.find(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()))) === null || _searchResults$find === void 0 ? void 0 : _searchResults$find._id;\n    if (!receiverId) {\n      console.error('No receiver selected');\n      return;\n    }\n    socket.emit('send_message', {\n      receiverId,\n      content: newMessage\n    });\n    const fetchMessages = async () => {\n      if (!selectedConversation) return;\n      if (!selectedConversation.conversationId) {\n        const token = sessionStorage.getItem('token');\n        const currentUserId = getCurrentUserId();\n        try {\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              senderId: currentUserId,\n              receiverId: selectedConversation.user._id\n            })\n          });\n          const data = await response.json();\n          if (data.conversationId) {\n            setSelectedConversation(prev => ({\n              ...prev,\n              conversationId: data.conversationId\n            }));\n          }\n        } catch (error) {\n          console.error('Failed to search for existing conversation:', error);\n        }\n        return;\n      }\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const messagesArray = Array.isArray(data) ? data : [data];\n        console.log('Fetched messages:', data);\n        if (Array.isArray(data)) {\n          setMessages(messagesArray);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n      }\n    };\n    const fetchConversations = async () => {\n      const token = sessionStorage.getItem('token');\n      console.log('Stored token:', sessionStorage.getItem('token'));\n      try {\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const conversationsArray = Array.isArray(data) ? data : [data];\n        console.log(\"convo:\", conversationsArray);\n        setConversations(conversationsArray);\n      } catch (error) {\n        console.error('Failed to fetch conversations:', error);\n        setConversations([]);\n      }\n    };\n    fetchConversations();\n    fetchMessages();\n    setNewMessage('');\n  };\n  const handleUserSelect = user => {\n    setSelectedConversation({\n      user: user,\n      conversationId: null\n    });\n    setIsSearchOpen(false);\n    setSearchQuery('');\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen bg-[#0F172A] text-[#E5E7EB]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"mt-4 bg-[#2563EB] text-[#E5E7EB] rounded-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-900 text-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 right-0 bg-gray-800 p-4 flex items-center justify-between z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-yellow-400\",\n        children: \"FuturChat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [selectedConversation && !selectedConversation.conversationId && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mr-2 bg-gray-700 text-gray-100 rounded-full p-2 hover:bg-gray-600 transition-colors duration-300\",\n          onClick: () => setSelectedConversation(null),\n          children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSearchOpen(!isSearchOpen),\n          className: \"bg-gray-700 text-gray-100 rounded-full p-2 hover:bg-gray-600 transition-colors duration-300\",\n          children: /*#__PURE__*/_jsxDEV(FiSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full pt-16 transition-all duration-300 ease-in-out\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-64 bg-gray-800 p-4 overflow-y-auto h-[calc(100vh-4rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'w-48' : 'w-64'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-yellow-400\",\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2\",\n          children: conversations.map(conv => {\n            var _conv$user, _conv$user2, _conv$user3;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `flex items-center p-3 rounded-lg cursor-pointer transition-colors duration-200 ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversationId) === conv.conversationId ? 'bg-blue-600' : 'hover:bg-gray-700'}`,\n              onClick: () => setSelectedConversation(conv),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                  className: \"mr-3 text-yellow-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `absolute bottom-0 right-0 w-3 h-3 rounded-full ${(_conv$user = conv.user) !== null && _conv$user !== void 0 && _conv$user.isOnline ? 'bg-green-500' : 'bg-gray-500'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate flex-grow\",\n                children: ((_conv$user2 = conv.user) === null || _conv$user2 === void 0 ? void 0 : _conv$user2.name) || ((_conv$user3 = conv.user) === null || _conv$user3 === void 0 ? void 0 : _conv$user3.username) || 'Unknown User'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-auto bg-red-500 text-white rounded-full px-2 py-1 text-xs\",\n                children: conv.unreadCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)]\n            }, conv.conversationId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex-1 flex flex-col h-[calc(100vh-4rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'mr-64' : ''}`,\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                className: \"mr-3 text-yellow-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `absolute bottom-0 right-0 w-3 h-3 rounded-full ${selectedConversation.user.isOnline ? 'bg-green-500' : 'bg-gray-500'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: selectedConversation.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex ${message.senderId === getCurrentUserId() ? 'justify-end' : 'justify-start'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-xs p-3 rounded-lg ${message.senderId === getCurrentUserId() ? 'bg-blue-600' : 'bg-gray-700'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-end mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-400 mr-2\",\n                    children: new Date(message.timestamp).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this), message.senderId === getCurrentUserId() && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs\",\n                    children: message.read ? /*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                      className: \"text-green-400\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(FiCheck, {\n                      className: \"text-gray-400\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this)\n            }, message._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"bg-gray-800 p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                placeholder: \"Type a message...\",\n                className: \"flex-1 bg-gray-700 text-gray-100 placeholder-gray-400 rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-blue-600 text-gray-100 rounded-r-lg px-4 py-2 hover:bg-blue-700 transition-colors duration-300\",\n                children: /*#__PURE__*/_jsxDEV(FiSend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // No conversation selected\n        _jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center bg-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {\n              className: \"mx-auto text-6xl text-gray-600 mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl text-gray-400\",\n              children: \"Select a conversation to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed right-0 top-16 bottom-0 bg-gray-800 w-64 transition-all duration-300 ease-in-out transform ${isSearchOpen ? 'translate-x-0' : 'translate-x-full'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              placeholder: \"Search users...\",\n              className: \"flex-1 bg-gray-700 text-gray-100 placeholder-gray-400 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-y-auto h-[calc(100vh-8rem)]\",\n            children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center p-2 rounded-lg cursor-pointer hover:bg-gray-700 transition-colors duration-200\",\n              onClick: () => handleUserSelect(user),\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                className: \"mr-2 text-yellow-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"5iLoT7qGLxrjLVngFbNPS73eza8=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jwtDecode","FiSend","FiUser","FiMessageSquare","FiSearch","FiX","FiCheck","FiCheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","getCurrentUserId","token","sessionStorage","getItem","decodedToken","user","id","error","console","ChatInterface","_s","conversations","setConversations","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","socket","setSocket","messagesEndRef","isSearchOpen","setIsSearchOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","users","setUsers","setError","newSocket","auth","close","handleReceiveMessage","message","prevConversations","map","conv","shouldUpdateUnreadCount","_id","senderId","conversationId","unreadCount","prevMessages","handleMessagesRead","receiverId","msg","read","on","off","currentUserId","hasUnreadMessages","some","_messages$find","emit","find","fetchConversations","log","response","fetch","method","headers","data","json","conversationsArray","Array","isArray","fetchUsers","encodeURIComponent","fetchMessages","body","JSON","stringify","prev","messagesArray","_messagesEndRef$curre","current","scrollIntoView","behavior","markMessagesAsRead","filtered","filter","username","toLowerCase","includes","handleSendMessage","e","_searchResults$find","preventDefault","content","handleUserSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_conv$user","_conv$user2","_conv$user3","isOnline","name","Date","timestamp","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Akshay Kadam/Desktop/WebDev/chat/client/src/components/chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { FiSend, FiUser, FiMessageSquare, FiSearch, FiX, FiCheck, FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst getCurrentUserId = () => {\r\n  try {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) return null;\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken.user.id;\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst ChatInterface = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // In useEffect or when component mounts\r\n  useEffect(() => {\r\n    // Connect to socket\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: {\r\n        token: sessionStorage.getItem('token')\r\n      }\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close();\r\n  }, [selectedConversation]);\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n  \r\n    const handleReceiveMessage = (message) => {\r\n      // Update conversations with new unread count, but only if the conversation is not currently selected\r\n      setConversations(prevConversations => \r\n        prevConversations.map(conv => {\r\n          // Check if the conversation is not the currently selected one\r\n          const shouldUpdateUnreadCount = \r\n            conv.user._id === message.senderId && \r\n            !(selectedConversation && \r\n              selectedConversation.conversationId === message.conversationId);\r\n          \r\n          return shouldUpdateUnreadCount \r\n            ? {...conv, unreadCount: message.unreadCount} \r\n            : conv;\r\n        })\r\n      );\r\n  \r\n      // Update messages if the conversation is currently open\r\n      if (selectedConversation && \r\n          message.conversationId === selectedConversation.conversationId) {\r\n        setMessages(prevMessages => [...prevMessages, message]);\r\n      }\r\n    };\r\n  \r\n    const handleMessagesRead = ({ conversationId, receiverId }) => {\r\n      // Update messages to reflect read status\r\n      setMessages(prevMessages => \r\n        prevMessages.map(msg => \r\n          msg.conversationId === conversationId && msg.senderId === getCurrentUserId()\r\n            ? { ...msg, read: true }\r\n            : msg\r\n        )\r\n      );\r\n    };\r\n  \r\n    socket.on('receive_message', handleReceiveMessage);\r\n    socket.on('messages_read', handleMessagesRead);\r\n  \r\n    return () => {\r\n      socket.off('receive_message', handleReceiveMessage);\r\n      socket.off('messages_read', handleMessagesRead);\r\n    };\r\n  }, [socket, selectedConversation]);\r\n\r\nuseEffect(() => {\r\n    // Mark messages as read when a conversation is selected\r\n    if (selectedConversation && socket) {\r\n      const currentUserId = getCurrentUserId();\r\n      const hasUnreadMessages = messages.some(\r\n        msg => msg.receiverId === currentUserId && !msg.read\r\n      );\r\n\r\n      if (hasUnreadMessages) {\r\n        socket.emit('mark_messages_read', {\r\n          conversationId: selectedConversation.conversationId,\r\n          senderId: messages.find(msg => msg.receiverId === currentUserId && !msg.read)?.senderId\r\n        });\r\n      }\r\n    }\r\n  }, [selectedConversation, messages, socket]);\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      console.log('Stored token:', sessionStorage.getItem('token'));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        const conversationsArray = Array.isArray(data) ? data : [data];\r\n        console.log(\"convo:\", conversationsArray);\r\n        setConversations(conversationsArray);\r\n      } catch (error) {\r\n        console.error('Failed to fetch conversations:', error);\r\n        setConversations([]);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/search-users?query=${encodeURIComponent(searchQuery)}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data)) {\r\n          setUsers(data);\r\n        } else {\r\n          console.error('Unexpected response format:', data);\r\n          setUsers([]); \r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch users:', error);\r\n        setUsers([]); \r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      if (!selectedConversation.conversationId) {\r\n        const token = sessionStorage.getItem('token');\r\n        const currentUserId = getCurrentUserId();\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              senderId: currentUserId,\r\n              receiverId: selectedConversation.user._id\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.conversationId) {\r\n            setSelectedConversation(prev => ({\r\n              ...prev,\r\n              conversationId: data.conversationId\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to search for existing conversation:', error);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        const messagesArray = Array.isArray(data) ? data : [data];\r\n        console.log('Fetched messages:', data);\r\n\r\n        if (Array.isArray(data)) {\r\n          setMessages(messagesArray);\r\n        } else {\r\n          console.error('Data is not an array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [selectedConversation]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  useEffect(() => {\r\n    const markMessagesAsRead = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}/read`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        // Update conversations to remove unread count for this conversation\r\n        setConversations(prevConversations => \r\n          prevConversations.map(conv => \r\n            conv.conversationId === selectedConversation.conversationId \r\n              ? {...conv, unreadCount: 0} \r\n              : conv\r\n          )\r\n        );\r\n      } catch (error) {\r\n        console.error('Failed to mark messages as read:', error);\r\n      }\r\n    };\r\n\r\n    markMessagesAsRead();\r\n  }, [selectedConversation]);\r\n  useEffect(() => {\r\n    const filtered = users.filter(user =>\r\n      user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setSearchResults(filtered);\r\n  }, [searchQuery, users]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage || !socket) return;\r\n\r\n    const receiverId = selectedConversation ?\r\n      selectedConversation.user._id :\r\n      searchResults.find(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()))?._id;\r\n\r\n    if (!receiverId) {\r\n      console.error('No receiver selected');\r\n      return;\r\n    }\r\n\r\n    socket.emit('send_message', {\r\n      receiverId,\r\n      content: newMessage\r\n    });\r\n    const fetchMessages = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      if (!selectedConversation.conversationId) {\r\n        const token = sessionStorage.getItem('token');\r\n        const currentUserId = getCurrentUserId();\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              senderId: currentUserId,\r\n              receiverId: selectedConversation.user._id\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.conversationId) {\r\n            setSelectedConversation(prev => ({\r\n              ...prev,\r\n              conversationId: data.conversationId\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to search for existing conversation:', error);\r\n        }\r\n        \r\n        return;\r\n      }\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        const messagesArray = Array.isArray(data) ? data : [data];\r\n        console.log('Fetched messages:', data);\r\n\r\n        if (Array.isArray(data)) {\r\n          setMessages(messagesArray);\r\n        } else {\r\n          console.error('Data is not an array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n    const fetchConversations = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      console.log('Stored token:', sessionStorage.getItem('token'));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        const conversationsArray = Array.isArray(data) ? data : [data];\r\n        console.log(\"convo:\", conversationsArray);\r\n        setConversations(conversationsArray);\r\n      } catch (error) {\r\n        console.error('Failed to fetch conversations:', error);\r\n        setConversations([]); \r\n      }\r\n    };\r\n    fetchConversations();\r\n    fetchMessages();\r\n    setNewMessage('');\r\n\r\n  };\r\n  const handleUserSelect = (user) => {\r\n    setSelectedConversation({\r\n      user: user,\r\n      conversationId: null  \r\n    });\r\n    setIsSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-[#0F172A] text-[#E5E7EB]\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">Error</h1>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"mt-4 bg-[#2563EB] text-[#E5E7EB] rounded-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-900 text-gray-100\">\r\n      {/* Top section */}\r\n      <div className=\"absolute top-0 left-0 right-0 bg-gray-800 p-4 flex items-center justify-between z-10\">\r\n        <h1 className=\"text-2xl font-bold text-yellow-400\">FuturChat</h1>\r\n        <div className=\"flex items-center\">\r\n          {selectedConversation && !selectedConversation.conversationId && (\r\n            <button\r\n              className=\"mr-2 bg-gray-700 text-gray-100 rounded-full p-2 hover:bg-gray-600 transition-colors duration-300\"\r\n              onClick={() => setSelectedConversation(null)}\r\n            >\r\n              <FiX />\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={() => setIsSearchOpen(!isSearchOpen)}\r\n            className=\"bg-gray-700 text-gray-100 rounded-full p-2 hover:bg-gray-600 transition-colors duration-300\"\r\n          >\r\n            <FiSearch />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex w-full pt-16 transition-all duration-300 ease-in-out\">\r\n        {/* Conversations Sidebar */}\r\n        <div className={`w-64 bg-gray-800 p-4 overflow-y-auto h-[calc(100vh-4rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'w-48' : 'w-64'}`}>\r\n          <h2 className=\"text-xl font-bold mb-4 text-yellow-400\">Chats</h2>\r\n          <ul className=\"space-y-2\">\r\n            {conversations.map((conv) => (\r\n              <li\r\n                key={conv.conversationId}\r\n                className={`flex items-center p-3 rounded-lg cursor-pointer transition-colors duration-200 ${\r\n                  selectedConversation?.conversationId === conv.conversationId ? 'bg-blue-600' : 'hover:bg-gray-700'\r\n                }`}\r\n                onClick={() => setSelectedConversation(conv)}\r\n              >\r\n                <div className=\"relative\">\r\n                  <FiUser className=\"mr-3 text-yellow-400\" />\r\n                  <span className={`absolute bottom-0 right-0 w-3 h-3 rounded-full ${\r\n                    conv.user?.isOnline ? 'bg-green-500' : 'bg-gray-500'\r\n                  }`}></span>\r\n                </div>\r\n                <span className=\"truncate flex-grow\">\r\n                  {conv.user?.name || conv.user?.username || 'Unknown User'}\r\n                </span>\r\n                {conv.unreadCount > 0 && (\r\n                  <span className=\"ml-auto bg-red-500 text-white rounded-full px-2 py-1 text-xs\">\r\n                    {conv.unreadCount}\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Chat Area */}\r\n        <div className={`flex-1 flex flex-col h-[calc(100vh-4rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'mr-64' : ''}`}>\r\n          {selectedConversation ? (\r\n            <>\r\n              {/* Chat Header */}\r\n              <div className=\"bg-gray-800 p-4 flex items-center\">\r\n                <div className=\"relative\">\r\n                  <FiUser className=\"mr-3 text-yellow-400\" />\r\n                  <span className={`absolute bottom-0 right-0 w-3 h-3 rounded-full ${\r\n                    selectedConversation.user.isOnline ? 'bg-green-500' : 'bg-gray-500'\r\n                  }`}></span>\r\n                </div>\r\n                <span className=\"font-bold\">{selectedConversation.user.name}</span>\r\n              </div>\r\n\r\n              {/* Chat Messages */}\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {messages.map((message) => (\r\n                  <div\r\n                    key={message._id}\r\n                    className={`flex ${message.senderId === getCurrentUserId() ? 'justify-end' : 'justify-start'}`}\r\n                  >\r\n                    <div\r\n                      className={`max-w-xs p-3 rounded-lg ${\r\n                        message.senderId === getCurrentUserId() ? 'bg-blue-600' : 'bg-gray-700'\r\n                      }`}\r\n                    >\r\n                      <p>{message.content}</p>\r\n                      <div className=\"flex items-center justify-end mt-1\">\r\n                        <p className=\"text-xs text-gray-400 mr-2\">\r\n                          {new Date(message.timestamp).toLocaleTimeString()}\r\n                        </p>\r\n                        {message.senderId === getCurrentUserId() && (\r\n                          <span className=\"text-xs\">\r\n                            {message.read ? (\r\n                              <FiCheckCircle className=\"text-green-400\" />\r\n                            ) : (\r\n                              <FiCheck className=\"text-gray-400\" />\r\n                            )}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              {/* Message Input */}\r\n              <form onSubmit={handleSendMessage} className=\"bg-gray-800 p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                    className=\"flex-1 bg-gray-700 text-gray-100 placeholder-gray-400 rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-blue-600 text-gray-100 rounded-r-lg px-4 py-2 hover:bg-blue-700 transition-colors duration-300\"\r\n                  >\r\n                    <FiSend />\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            // No conversation selected\r\n            <div className=\"flex-1 flex items-center justify-center bg-gray-800\">\r\n              <div className=\"text-center\">\r\n                <FiMessageSquare className=\"mx-auto text-6xl text-gray-600 mb-4\" />\r\n                <p className=\"text-xl text-gray-400\">Select a conversation to start chatting</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Search Capsule */}\r\n        <div\r\n          className={`fixed right-0 top-16 bottom-0 bg-gray-800 w-64 transition-all duration-300 ease-in-out transform ${\r\n            isSearchOpen ? 'translate-x-0' : 'translate-x-full'\r\n          }`}\r\n        >\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search users...\"\r\n                className=\"flex-1 bg-gray-700 text-gray-100 placeholder-gray-400 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"overflow-y-auto h-[calc(100vh-8rem)]\">\r\n              {searchResults.map((user) => (\r\n                <div\r\n                  key={user._id}\r\n                  className=\"flex items-center p-2 rounded-lg cursor-pointer hover:bg-gray-700 transition-colors duration-200\"\r\n                  onClick={() => handleUserSelect(user)}\r\n                >\r\n                  <FiUser className=\"mr-2 text-yellow-400\" />\r\n                  <span>{user.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}