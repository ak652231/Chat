{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshay Kadam\\\\Desktop\\\\WebDev\\\\chat\\\\client\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport { FiSend, FiUser, FiMessageSquare, FiCircle, FiSearch, FiX } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getCurrentUserId = () => {\n  try {\n    const token = sessionStorage.getItem('token');\n    if (!token) return null;\n    const decodedToken = jwtDecode(token);\n    return decodedToken.user.id;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return null;\n  }\n};\nconst ChatInterface = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n\n  // In useEffect or when component mounts\n  useEffect(() => {\n    // Connect to socket\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token: sessionStorage.getItem('token')\n      }\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [selectedConversation]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleReceiveMessage = message => {\n      // Update conversations with new unread count\n      setConversations(prevConversations => prevConversations.map(conv => conv.user._id === message.senderId ? {\n        ...conv,\n        unreadCount: message.unreadCount\n      } : conv));\n\n      // Update messages if the conversation is currently open\n      if (selectedConversation && message.conversationId === selectedConversation.conversationId) {\n        setMessages(prevMessages => [...prevMessages, message]);\n      }\n    };\n    socket.on('receive_message', handleReceiveMessage);\n    return () => {\n      socket.off('receive_message', handleReceiveMessage);\n    };\n  }, [socket, selectedConversation]);\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const token = sessionStorage.getItem('token');\n      console.log('Stored token:', sessionStorage.getItem('token'));\n      try {\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const conversationsArray = Array.isArray(data) ? data : [data];\n        console.log(\"convo:\", conversationsArray);\n        setConversations(conversationsArray);\n      } catch (error) {\n        console.error('Failed to fetch conversations:', error);\n        setConversations([]);\n      }\n    };\n    const fetchUsers = async () => {\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/search-users?query=${encodeURIComponent(searchQuery)}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setUsers(data);\n        } else {\n          console.error('Unexpected response format:', data);\n          setUsers([]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch users:', error);\n        setUsers([]);\n      }\n    };\n    fetchConversations();\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!selectedConversation) return;\n      if (!selectedConversation.conversationId) {\n        const token = sessionStorage.getItem('token');\n        const currentUserId = getCurrentUserId();\n        try {\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              senderId: currentUserId,\n              receiverId: selectedConversation.user._id\n            })\n          });\n          const data = await response.json();\n          if (data.conversationId) {\n            setSelectedConversation(prev => ({\n              ...prev,\n              conversationId: data.conversationId\n            }));\n          }\n        } catch (error) {\n          console.error('Failed to search for existing conversation:', error);\n        }\n        return;\n      }\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const messagesArray = Array.isArray(data) ? data : [data];\n        console.log('Fetched messages:', data);\n        if (Array.isArray(data)) {\n          setMessages(messagesArray);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [selectedConversation]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!selectedConversation) return;\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}/read`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n\n        // Update conversations to remove unread count for this conversation\n        setConversations(prevConversations => prevConversations.map(conv => conv.conversationId === selectedConversation.conversationId ? {\n          ...conv,\n          unreadCount: 0\n        } : conv));\n      } catch (error) {\n        console.error('Failed to mark messages as read:', error);\n      }\n    };\n    markMessagesAsRead();\n  }, [selectedConversation]);\n  useEffect(() => {\n    const filtered = users.filter(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()));\n    setSearchResults(filtered);\n  }, [searchQuery, users]);\n  const handleSendMessage = e => {\n    var _searchResults$find;\n    e.preventDefault();\n    if (!newMessage || !socket) return;\n    const receiverId = selectedConversation ? selectedConversation.user._id : (_searchResults$find = searchResults.find(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()))) === null || _searchResults$find === void 0 ? void 0 : _searchResults$find._id;\n    if (!receiverId) {\n      console.error('No receiver selected');\n      return;\n    }\n    socket.emit('send_message', {\n      receiverId,\n      content: newMessage\n    });\n    const fetchMessages = async () => {\n      if (!selectedConversation) return;\n      if (!selectedConversation.conversationId) {\n        const token = sessionStorage.getItem('token');\n        const currentUserId = getCurrentUserId();\n        try {\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              senderId: currentUserId,\n              receiverId: selectedConversation.user._id\n            })\n          });\n          const data = await response.json();\n          if (data.conversationId) {\n            setSelectedConversation(prev => ({\n              ...prev,\n              conversationId: data.conversationId\n            }));\n          }\n        } catch (error) {\n          console.error('Failed to search for existing conversation:', error);\n        }\n        return;\n      }\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const messagesArray = Array.isArray(data) ? data : [data];\n        console.log('Fetched messages:', data);\n        if (Array.isArray(data)) {\n          setMessages(messagesArray);\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n      }\n    };\n    const fetchConversations = async () => {\n      const token = sessionStorage.getItem('token');\n      console.log('Stored token:', sessionStorage.getItem('token'));\n      try {\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const conversationsArray = Array.isArray(data) ? data : [data];\n        console.log(\"convo:\", conversationsArray);\n        setConversations(conversationsArray);\n      } catch (error) {\n        console.error('Failed to fetch conversations:', error);\n        setConversations([]);\n      }\n    };\n    fetchConversations();\n    fetchMessages();\n    setNewMessage('');\n  };\n  const handleUserSelect = user => {\n    setSelectedConversation({\n      user: user,\n      conversationId: null\n    });\n    setIsSearchOpen(false);\n    setSearchQuery('');\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen bg-[#0F172A] text-[#E5E7EB]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"mt-4 bg-[#2563EB] text-[#E5E7EB] rounded-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-[#0F172A] text-[#E5E7EB]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 right-0 bg-[#1E3A8A] p-2 flex items-center justify-between z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold text-[#FACC15]\",\n        children: \"FuturChat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [selectedConversation && !selectedConversation.conversationId && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mr-2 bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\",\n          children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSearchOpen(!isSearchOpen),\n          className: \"bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\",\n          children: /*#__PURE__*/_jsxDEV(FiSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full pt-12 transition-all duration-300 ease-in-out\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-64 bg-[#1E3A8A] p-4 overflow-y-auto h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'w-48' : 'w-64'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-[#FACC15]\",\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2\",\n          children: conversations.map(conv => {\n            var _conv$user, _conv$user2, _conv$user3;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `flex items-center p-2 rounded-lg cursor-pointer transition-colors duration-200 ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversationId) === conv.conversationId ? 'bg-[#2563EB]' : 'hover:bg-[#312E81]'}`,\n              onClick: () => setSelectedConversation(conv),\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                className: \"mr-2 text-[#FACC15]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate\",\n                children: ((_conv$user = conv.user) === null || _conv$user === void 0 ? void 0 : _conv$user.name) || ((_conv$user2 = conv.user) === null || _conv$user2 === void 0 ? void 0 : _conv$user2.username) || 'Unknown User'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 11\n              }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-auto bg-red-500 text-white rounded-full px-2 py-1 text-xs\",\n                children: conv.unreadCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(FiCircle, {\n                className: `ml-2 w-2 h-2 ${(_conv$user3 = conv.user) !== null && _conv$user3 !== void 0 && _conv$user3.isOnline ? 'text-green-500' : 'text-gray-500'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 11\n              }, this)]\n            }, conv.conversationId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex-1 flex flex-col h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'mr-64' : ''}`,\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#1E3A8A] p-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiUser, {\n              className: \"mr-2 text-[#FACC15]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: selectedConversation.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FiCircle, {\n              className: `ml-2 w-2 h-2 ${selectedConversation.user.isOnline ? 'text-green-500' : 'text-gray-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex ${message.senderId === getCurrentUserId() ? 'justify-end' : 'justify-start'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-xs p-3 rounded-lg ${message.senderId === getCurrentUserId() ? 'bg-[#2563EB]' : 'bg-[#312E81]'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-[#A78BFA] mt-1\",\n                    children: new Date(message.timestamp).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 9\n                  }, this), message.senderId === getCurrentUserId() && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-[#A78BFA] mt-1\",\n                    children: message.read ? 'Seen' : 'Sent'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 5\n              }, this)\n            }, message._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 3\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"bg-[#1E3A8A] p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                placeholder: \"Type a message...\",\n                className: \"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-[#2563EB] text-[#E5E7EB] rounded-r-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\",\n                children: /*#__PURE__*/_jsxDEV(FiSend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // No conversation selected\n        _jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {\n              className: \"mx-auto text-6xl text-[#A78BFA] mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl\",\n              children: \"Select a conversation to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed right-0 top-12 bottom-0 bg-[#1E3A8A] w-64 transition-all duration-300 ease-in-out transform ${isSearchOpen ? 'translate-x-0' : 'translate-x-full'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              placeholder: \"Search users...\",\n              className: \"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-y-auto h-[calc(100vh-8rem)]\",\n            children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center p-2 rounded-lg cursor-pointer hover:bg-[#312E81] transition-colors duration-200\",\n              onClick: () => handleUserSelect(user),\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {\n                className: \"mr-2 text-[#FACC15]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"pvgiasiAH7I6u1F+rVh3C2ZwBzE=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jwtDecode","FiSend","FiUser","FiMessageSquare","FiCircle","FiSearch","FiX","jsxDEV","_jsxDEV","Fragment","_Fragment","getCurrentUserId","token","sessionStorage","getItem","decodedToken","user","id","error","console","ChatInterface","_s","conversations","setConversations","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","socket","setSocket","messagesEndRef","isSearchOpen","setIsSearchOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","users","setUsers","setError","newSocket","auth","close","handleReceiveMessage","message","prevConversations","map","conv","_id","senderId","unreadCount","conversationId","prevMessages","on","off","fetchConversations","log","response","fetch","method","headers","data","json","conversationsArray","Array","isArray","fetchUsers","encodeURIComponent","fetchMessages","currentUserId","body","JSON","stringify","receiverId","prev","messagesArray","_messagesEndRef$curre","current","scrollIntoView","behavior","markMessagesAsRead","filtered","filter","username","toLowerCase","includes","handleSendMessage","e","_searchResults$find","preventDefault","find","emit","content","handleUserSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_conv$user","_conv$user2","_conv$user3","name","isOnline","Date","timestamp","toLocaleTimeString","read","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Akshay Kadam/Desktop/WebDev/chat/client/src/components/chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { FiSend, FiUser, FiMessageSquare, FiCircle, FiSearch, FiX } from 'react-icons/fi';\r\n\r\nconst getCurrentUserId = () => {\r\n  try {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) return null;\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken.user.id;\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst ChatInterface = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // In useEffect or when component mounts\r\n  useEffect(() => {\r\n    // Connect to socket\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: {\r\n        token: sessionStorage.getItem('token')\r\n      }\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close();\r\n  }, [selectedConversation]);\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handleReceiveMessage = (message) => {\r\n      // Update conversations with new unread count\r\n      setConversations(prevConversations => \r\n        prevConversations.map(conv => \r\n          conv.user._id === message.senderId \r\n            ? {...conv, unreadCount: message.unreadCount} \r\n            : conv\r\n        )\r\n      );\r\n\r\n      // Update messages if the conversation is currently open\r\n      if (selectedConversation && \r\n          message.conversationId === selectedConversation.conversationId) {\r\n        setMessages(prevMessages => [...prevMessages, message]);\r\n      }\r\n    };\r\n\r\n    socket.on('receive_message', handleReceiveMessage);\r\n\r\n    return () => {\r\n      socket.off('receive_message', handleReceiveMessage);\r\n    };\r\n  }, [socket, selectedConversation]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      console.log('Stored token:', sessionStorage.getItem('token'));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        const conversationsArray = Array.isArray(data) ? data : [data];\r\n        console.log(\"convo:\", conversationsArray);\r\n        setConversations(conversationsArray);\r\n      } catch (error) {\r\n        console.error('Failed to fetch conversations:', error);\r\n        setConversations([]);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/search-users?query=${encodeURIComponent(searchQuery)}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data)) {\r\n          setUsers(data);\r\n        } else {\r\n          console.error('Unexpected response format:', data);\r\n          setUsers([]); \r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch users:', error);\r\n        setUsers([]); \r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      if (!selectedConversation.conversationId) {\r\n        const token = sessionStorage.getItem('token');\r\n        const currentUserId = getCurrentUserId();\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              senderId: currentUserId,\r\n              receiverId: selectedConversation.user._id\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.conversationId) {\r\n            setSelectedConversation(prev => ({\r\n              ...prev,\r\n              conversationId: data.conversationId\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to search for existing conversation:', error);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        const messagesArray = Array.isArray(data) ? data : [data];\r\n        console.log('Fetched messages:', data);\r\n\r\n        if (Array.isArray(data)) {\r\n          setMessages(messagesArray);\r\n        } else {\r\n          console.error('Data is not an array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [selectedConversation]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  useEffect(() => {\r\n    const markMessagesAsRead = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}/read`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        // Update conversations to remove unread count for this conversation\r\n        setConversations(prevConversations => \r\n          prevConversations.map(conv => \r\n            conv.conversationId === selectedConversation.conversationId \r\n              ? {...conv, unreadCount: 0} \r\n              : conv\r\n          )\r\n        );\r\n      } catch (error) {\r\n        console.error('Failed to mark messages as read:', error);\r\n      }\r\n    };\r\n\r\n    markMessagesAsRead();\r\n  }, [selectedConversation]);\r\n  useEffect(() => {\r\n    const filtered = users.filter(user =>\r\n      user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setSearchResults(filtered);\r\n  }, [searchQuery, users]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage || !socket) return;\r\n\r\n    const receiverId = selectedConversation ?\r\n      selectedConversation.user._id :\r\n      searchResults.find(user => user.username.toLowerCase().includes(searchQuery.toLowerCase()))?._id;\r\n\r\n    if (!receiverId) {\r\n      console.error('No receiver selected');\r\n      return;\r\n    }\r\n\r\n    socket.emit('send_message', {\r\n      receiverId,\r\n      content: newMessage\r\n    });\r\n    const fetchMessages = async () => {\r\n      if (!selectedConversation) return;\r\n\r\n      if (!selectedConversation.conversationId) {\r\n        const token = sessionStorage.getItem('token');\r\n        const currentUserId = getCurrentUserId();\r\n\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/chat/search-conversation`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              senderId: currentUserId,\r\n              receiverId: selectedConversation.user._id\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.conversationId) {\r\n            setSelectedConversation(prev => ({\r\n              ...prev,\r\n              conversationId: data.conversationId\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to search for existing conversation:', error);\r\n        }\r\n        \r\n        return;\r\n      }\r\n\r\n      const token = sessionStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/chat/conversations/${selectedConversation.conversationId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        const messagesArray = Array.isArray(data) ? data : [data];\r\n        console.log('Fetched messages:', data);\r\n\r\n        if (Array.isArray(data)) {\r\n          setMessages(messagesArray);\r\n        } else {\r\n          console.error('Data is not an array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n    const fetchConversations = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      console.log('Stored token:', sessionStorage.getItem('token'));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/chat/conversations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        const conversationsArray = Array.isArray(data) ? data : [data];\r\n        console.log(\"convo:\", conversationsArray);\r\n        setConversations(conversationsArray);\r\n      } catch (error) {\r\n        console.error('Failed to fetch conversations:', error);\r\n        setConversations([]); \r\n      }\r\n    };\r\n    fetchConversations();\r\n    fetchMessages();\r\n    setNewMessage('');\r\n\r\n  };\r\n  const handleUserSelect = (user) => {\r\n    setSelectedConversation({\r\n      user: user,\r\n      conversationId: null  \r\n    });\r\n    setIsSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-[#0F172A] text-[#E5E7EB]\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">Error</h1>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"mt-4 bg-[#2563EB] text-[#E5E7EB] rounded-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-[#0F172A] text-[#E5E7EB]\">\r\n      {/* Top section */}\r\n      <div className=\"absolute top-0 left-0 right-0 bg-[#1E3A8A] p-2 flex items-center justify-between z-10\">\r\n        <h1 className=\"text-xl font-bold text-[#FACC15]\">FuturChat</h1>\r\n        <div className=\"flex items-center\">\r\n          {selectedConversation && !selectedConversation.conversationId && (\r\n            <button\r\n              className=\"mr-2 bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n            >\r\n              <FiX />\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={() => setIsSearchOpen(!isSearchOpen)}\r\n            className=\"bg-[#2563EB] text-[#E5E7EB] rounded-full p-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n          >\r\n            <FiSearch />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex w-full pt-12 transition-all duration-300 ease-in-out\">\r\n        {/* Conversations Sidebar */}\r\n        <div className={`w-64 bg-[#1E3A8A] p-4 overflow-y-auto h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'w-48' : 'w-64'}`}>\r\n          <h2 className=\"text-xl font-bold mb-4 text-[#FACC15]\">Chats</h2>\r\n          <ul className=\"space-y-2\">\r\n      {conversations.map((conv) => (\r\n        <li\r\n          key={conv.conversationId}\r\n          className={`flex items-center p-2 rounded-lg cursor-pointer transition-colors duration-200 ${selectedConversation?.conversationId === conv.conversationId ? 'bg-[#2563EB]' : 'hover:bg-[#312E81]'}`}\r\n          onClick={() => setSelectedConversation(conv)}\r\n        >\r\n          <FiUser className=\"mr-2 text-[#FACC15]\" />\r\n          <span className=\"truncate\">\r\n            {conv.user?.name || conv.user?.username || 'Unknown User'}\r\n          </span>\r\n          {conv.unreadCount > 0 && (\r\n            <span className=\"ml-auto bg-red-500 text-white rounded-full px-2 py-1 text-xs\">\r\n              {conv.unreadCount}\r\n            </span>\r\n          )}\r\n          <FiCircle\r\n            className={`ml-2 w-2 h-2 ${conv.user?.isOnline ? 'text-green-500' : 'text-gray-500'}`}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n        </div>\r\n\r\n        {/* Chat Area */}\r\n        <div className={`flex-1 flex flex-col h-[calc(100vh-3rem)] transition-all duration-300 ease-in-out ${isSearchOpen ? 'mr-64' : ''}`}>\r\n          {selectedConversation ? (\r\n            <>\r\n              {/* Chat Header */}\r\n              <div className=\"bg-[#1E3A8A] p-4 flex items-center\">\r\n                <FiUser className=\"mr-2 text-[#FACC15]\" />\r\n                <span className=\"font-bold\">{selectedConversation.user.name}</span>\r\n                <FiCircle\r\n                  className={`ml-2 w-2 h-2 ${selectedConversation.user.isOnline ? 'text-green-500' : 'text-gray-500'\r\n                    }`}\r\n                />\r\n              </div>\r\n\r\n              {/* Chat Messages */}\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {messages.map((message) => (\r\n  <div\r\n    key={message._id}\r\n    className={`flex ${message.senderId === getCurrentUserId() ? 'justify-end' : 'justify-start'}`}\r\n  >\r\n    <div\r\n      className={`max-w-xs p-3 rounded-lg ${message.senderId === getCurrentUserId() ? 'bg-[#2563EB]' : 'bg-[#312E81]'}`}\r\n    >\r\n      <p>{message.content}</p>\r\n      <div className=\"flex items-center justify-between\">\r\n        <p className=\"text-xs text-[#A78BFA] mt-1\">\r\n          {new Date(message.timestamp).toLocaleTimeString()}\r\n        </p>\r\n        {message.senderId === getCurrentUserId() && (\r\n          <span className=\"text-xs text-[#A78BFA] mt-1\">\r\n            {message.read ? 'Seen' : 'Sent'}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              {/* Message Input */}\r\n              <form onSubmit={handleSendMessage} className=\"bg-[#1E3A8A] p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                    className=\"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-[#2563EB] text-[#E5E7EB] rounded-r-lg px-4 py-2 hover:bg-[#1E40AF] transition-colors duration-300\"\r\n                  >\r\n                    <FiSend />\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            // No conversation selected\r\n            <div className=\"flex-1 flex items-center justify-center\">\r\n              <div className=\"text-center\">\r\n                <FiMessageSquare className=\"mx-auto text-6xl text-[#A78BFA] mb-4\" />\r\n                <p className=\"text-xl\">Select a conversation to start chatting</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Search Capsule */}\r\n        <div\r\n          className={`fixed right-0 top-12 bottom-0 bg-[#1E3A8A] w-64 transition-all duration-300 ease-in-out transform ${isSearchOpen ? 'translate-x-0' : 'translate-x-full'\r\n            }`}\r\n        >\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search users...\"\r\n                className=\"flex-1 bg-[#312E81] text-[#E5E7EB] placeholder-[#A78BFA] rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#2563EB]\"\r\n              />\r\n            </div>\r\n            <div className=\"overflow-y-auto h-[calc(100vh-8rem)]\">\r\n              {searchResults.map((user) => (\r\n                <div\r\n                  key={user._id}\r\n                  className=\"flex items-center p-2 rounded-lg cursor-pointer hover:bg-[#312E81] transition-colors duration-200\"\r\n                  onClick={() => handleUserSelect(user)}\r\n                >\r\n                  <FiUser className=\"mr-2 text-[#FACC15]\" />\r\n                  <span>{user.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}